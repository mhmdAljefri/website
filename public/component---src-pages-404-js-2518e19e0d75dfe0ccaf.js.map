{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/helpers/colorSchema.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","primary","secondry","light","medium","dark","m","module","exports","require","default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","React","createContext","PropTypes","object","string","isRequired","func","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","propTypes","shape","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","arrayOf","List","styled","li","withConfig","displayName","componentId","Ul","ul","StyledHeader","header","Wrapper","div","Header","react_default","style","margin","gatsby_browser_entry","to","textDecoration","href","StyledFooter","footer","colorSchema","Footer","Date","getFullYear","GlobalStyle","createGlobalStyle","_templateObject","Layout","children","_useState","useState","darkTheme","setDarkTheme","Fragment","onToggleTheme","node"],"mappings":"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","file":"component---src-pages-404-js-2518e19e0d75dfe0ccaf.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","export default {\n  primary: \"#04666c\",\n  secondry: \"#5F4B66\",\n  light: \"#eee\",\n  medium: \"#8797AF\",\n  dark: \"#56667A\",\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport React from \"react\"\nimport styled from \"styled-components\"\n\nconst List = styled.li`\n  list-style: none;\n  margin: 5px;\n`\n\nconst Ul = styled.ul`\n  display: flex;\n`\n\nconst StyledHeader = styled.header`\n  position: fixed;\n  z-index: 1;\n  top: 0;\n  right: 0;\n  left: 0;\n`\n\nconst Wrapper = styled.div`\n  margin: 0px auto;\n  max-width: 960px;\n  padding: 1.45rem 1.0875rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nconst Header = () => (\n  <StyledHeader>\n    <Wrapper>\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            textDecoration: `none`,\n          }}\n        >\n          mhmdAljefri\n        </Link>\n      </h1>\n      <nav>\n        <Ul>\n          <List>\n            <a href=\"#blog\">Blog</a>\n          </List>\n          <List>\n            <a href=\"#contact\">Contact</a>\n          </List>\n        </Ul>\n      </nav>\n    </Wrapper>\n  </StyledHeader>\n)\n\nexport default Header\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport colorSchema from \"../helpers/colorSchema\"\n\nconst StyledFooter = styled.footer`\n  padding: 1.45rem 1.0875rem;\n  margin-top: 50px;\n  background: ${colorSchema.dark};\n  color: ${colorSchema.light};\n`\n\nconst Footer = () => (\n  <StyledFooter>\n    © {new Date().getFullYear()}, Built &hearts;\n    {` `} By ME\n  </StyledFooter>\n)\n\nexport default Footer\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React, { useState } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { createGlobalStyle } from \"styled-components\"\n\nimport Header from \"./header\"\nimport Footer from \"./footer\"\nimport colorSchema from \"../helpers/colorSchema\"\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    padding: 0;\n    margin: 0;\n    box-sizing: border-box;\n  }\n\n  body {\n    margin: 0;\n    color: ${colorSchema.dark};\n    background: #fff;\n  }\n  a {\n    position: relative;\n    display: inline-block;\n    color: ${colorSchema.primary};\n    text-decoration: none;\n    ::after {\n      content: '';\n      position: absolute;\n      transition: all ease-in-out 400ms;\n      bottom: 0;\n      right: 0;\n      left: 0;\n      height: 5px;\n      z-index: -1;\n      background: ${colorSchema.light}\n    }\n    :hover {\n      color: ${colorSchema.dark};\n      \n      ::after {\n        height: 100%;\n       }\n    }\n  }\n  footer {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n`\n\nconst Layout = ({ children }) => {\n  const [darkTheme, setDarkTheme] = useState(false)\n\n  function toggleTheme() {\n    setDarkTheme(!darkTheme)\n  }\n  return (\n    <>\n      <GlobalStyle darkTheme={darkTheme} />\n      <Header onToggleTheme={toggleTheme} />\n      <main>{children}</main>\n      <Footer />\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}